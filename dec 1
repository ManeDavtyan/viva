import pandas as pd

# Example DataFrame
data = {'HttpHost': ["yscdiqe", "23.846.20.837", "12972459", "www.ugcfve.com", "^01t29e719.owugw", "", "862rfvo9u1-jbvwio.com"],
        'Class': ["Class 1", "Class 2", "Class 3", "Class 4", "Class 5", "Class 6", "Class 7"],
        'OtherColumn': [1, 2, 3, 4, 5, 6, 7]}
df = pd.DataFrame(data)

# Define a function to extract parts after a dot and drop the first part
def extract_and_drop_first(http_host):
    pattern = r'.([^\.]+)'
    extracted_parts = pd.Series(http_host).str.extractall(pattern)[0].tolist()
    return extracted_parts[1:] if extracted_parts else []

# Create an empty DataFrame to store extracted values
extracted_df = pd.DataFrame(columns=['ID', 'Protocol', 'ExtractedValues', 'Class'])

# Iterate over each class and extract values
for class_name in ['Class 4', 'Class 5']:
    class_df = df[df['Class'] == class_name]
    extracted_values_df = class_df['HttpHost'].apply(extract_and_drop_first).reset_index()
    
    # Add data to the extracted DataFrame
    extracted_data = {'ID': extracted_values_df['index'],
                      'Protocol': class_name.split()[1],  # Extract protocol from class name
                      'ExtractedValues': extracted_values_df[0],
                      'Class': class_name}
    extracted_df = pd.concat([extracted_df, pd.DataFrame(extracted_data)], ignore_index=True)

# Display the extracted DataFrame
print(extracted_df)
