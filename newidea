import pandas as pd
import re
import matplotlib.pyplot as plt
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA

# Assuming df is your DataFrame and 'HttpHost' is the column of interest
df['HttpHost'] = df['HttpHost'].astype(str)  # Ensure the column is of string type

# Vectorize HTTP hosts using TF-IDF
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(df['HttpHost'])

# Perform k-means clustering
num_clusters = 10
kmeans = KMeans(n_clusters=num_clusters, random_state=42)
df['Cluster'] = kmeans.fit_predict(X)

# Use PCA for dimensionality reduction
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X.toarray())

# Plotting cluster assignments
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=df['Cluster'], cmap='viridis', s=20)
plt.title('K-Means Clustering of HTTP Hosts')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.show()

# Display the distribution of HTTP hosts in each cluster
cluster_distribution = df.groupby('Cluster')['HttpHost'].value_counts()
print("Cluster Distribution:")
print(cluster_distribution)

# Print each row with its cluster assignment
for index, row in df.iterrows():
    print(f"Row {index}: Cluster {row['Cluster']} - HTTP Host: {row['HttpHost']}")
